"""create users and transactions table

Revision ID: 4311d9bb0ebd
Revises: 
Create Date: 2024-07-23 00:06:38.255941

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "4311d9bb0ebd"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("user_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("user_id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("username"),
    )
    op.create_index(
        "email_created_at_idx", "users", ["email", "created_at"], unique=False
    )
    op.create_index("email_pass_idx", "users", ["email", "password"], unique=False)
    op.create_index(
        "email_updated_at_idx", "users", ["email", "updated_at"], unique=False
    )
    op.create_index(
        "user_created_at_idx", "users", ["username", "created_at"], unique=False
    )
    op.create_index(
        "user_email_pass_idx", "users", ["username", "email", "password"], unique=False
    )
    op.create_index("user_pass_idx", "users", ["username", "password"], unique=False)
    op.create_index(
        "user_updated_at_idx", "users", ["username", "updated_at"], unique=False
    )
    op.create_table(
        "transactions",
        sa.Column("transaction_id", sa.Integer(), nullable=False),
        sa.Column("description", sa.String(length=255), nullable=False),
        sa.Column("amount", sa.Float(asdecimal=True), nullable=False),
        sa.Column("type_of_transaction", sa.String(length=20), nullable=False),
        sa.Column("registration_date", sa.DateTime(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.user_id"],
        ),
        sa.PrimaryKeyConstraint("transaction_id"),
    )
    op.create_index(
        "amount_type_of_transaction_idx",
        "transactions",
        ["amount", "type_of_transaction"],
        unique=False,
    )
    op.create_index(
        "desc_amount_idx", "transactions", ["description", "amount"], unique=False
    )
    op.create_index(
        "desc_amount_userid_idx",
        "transactions",
        ["description", "amount", "user_id"],
        unique=False,
    )
    op.create_index(
        "type_of_transaction_date_idx",
        "transactions",
        ["type_of_transaction", "registration_date"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("type_of_transaction_date_idx", table_name="transactions")
    op.drop_index("desc_amount_userid_idx", table_name="transactions")
    op.drop_index("desc_amount_idx", table_name="transactions")
    op.drop_index("amount_type_of_transaction_idx", table_name="transactions")
    op.drop_table("transactions")
    op.drop_index("user_updated_at_idx", table_name="users")
    op.drop_index("user_pass_idx", table_name="users")
    op.drop_index("user_email_pass_idx", table_name="users")
    op.drop_index("user_created_at_idx", table_name="users")
    op.drop_index("email_updated_at_idx", table_name="users")
    op.drop_index("email_pass_idx", table_name="users")
    op.drop_index("email_created_at_idx", table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###
